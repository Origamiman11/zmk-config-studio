//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

/ {
    combos {
        compatible = "zmk,combos";

        mouse_on {
            bindings = <&to 3>;
            key-positions = <32 33>;
            layers = <0>;
        };

        numpad_on {
            bindings = <&to 2>;
            key-positions = <33 34>;
            layers = <0>;
        };

        game_on {
            bindings = <&to 1>;
            key-positions = <32 34>;
            layers = <0>;
        };

        numpad_off {
            bindings = <&to 0>;
            key-positions = <32 33>;
            layers = <2>;
        };

        mouse_off {
            bindings = <&to 0>;
            key-positions = <32 33>;
            layers = <3>;
        };

        word_delete {
            bindings = <&kp LA(BACKSPACE)>;
            key-positions = <20 34>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        BASE {
            bindings = <
                 &kp Q  &kp W  &kp F                &kp P   &kp B                       &kp J      &kp L   &kp U      &kp Y    &kp SEMI
                 &kp A  &kp R  &kp S                &kp T   &kp G                       &kp M      &kp N   &kp E      &kp I    &kp O
&mt LS(TAB) TAB  &kp Z  &kp X  &kp C                &kp D   &kp V                       &kp K      &kp H   &kp COMMA  &kp DOT  &kp LALT  &mt LCTRL SQT
                               &mt LEFT_GUI ESCAPE  &trans  &mt LEFT_SHIFT BACKSPACE    &kp SPACE  &trans  &trans
            >;
        };

        GAME {
            bindings = <
        &kp T      &kp Q  &kp W   &kp E   &kp R        &kp Y      &kp U   &kp I      &kp O    &kp P
        &kp LSHFT  &kp A  &kp S   &kp D   &kp F        &kp H      &kp J   &kp K      &kp L    &kp SEMI
&trans  &kp LCTRL  &kp Z  &kp X   &kp C   &kp V        &kp N      &kp M   &kp COMMA  &kp DOT  &kp FSLH  &to 0
                          &trans  &trans  &kp SPACE    &kp SPACE  &trans  &trans
            >;
        };

        NUMPAD {
            bindings = <
                 &kp ASTERISK  &kp N7  &kp N8   &kp N9  &kp PLUS     &none  &kp F1  &kp F2   &kp F3   &kp F4
                 &kp ENTER     &kp N4  &kp N5   &kp N6  &kp EQUAL    &none  &kp F5  &kp F6   &kp F7   &kp F8
&mt LS(TAB) TAB  &kp FSLH      &kp N1  &kp N2   &kp N3  &kp MINUS    &none  &kp F9  &kp F10  &kp F11  &kp F12  &to 0
                                       &kp DOT  &kp N0  &kp BSPC     &none  &to 0   &none
            >;
        };

        MOUSE {
            bindings = <
                 &none         &kp F3          &mmv MOVE_UP                   &mkp MB3                   &mkp RCLK    &none   &none           &none        &none       &none
                 &mkp MB4      &mmv MOVE_LEFT  &mmv MOVE_DOWN                 &mmv MOVE_RIGHT            &mkp MB5     &kp F3  &mkp MB1        &mkp MB2     &mkp MB3    &mmv MOVE_X(-400)
&mt LS(TAB) TAB  &kp LC(LEFT)  &kp LC(RIGHT)   &mt LA(LC(LG(Q))) LS(LC(TAB))  &mt LA(LC(LG(E))) LC(TAB)  &none        &none   &kp C_PREVIOUS  &kp C_PAUSE  &kp C_NEXT  &none              &to 0
                                               &mt LEFT_GUI ESCAPE            &mt LEFT_SHIFT R           &mkp LCLK    &none   &none           &none
            >;
        };

        NUMBER {
            bindings = <
           &kp LS(N1)    &kp LS(N2)     &kp LS(N3)                     &kp LS(N4)                 &kp LS(N5)    &kp LS(N6)       &kp LS(N7)    &kp LS(N8)    &kp LS(N9)    &kp LS(N0)
           &kp N1        &kp N2         &kp N3                         &kp N4                     &kp N5        &kp N6           &kp N7        &kp N8        &kp N9        &kp N0
&kp UNDER  &kp LC(LEFT)  &kp LC(RIGHT)  &mt LC(LA(LG(Q))) LS(LC(TAB))  &mt LA(LC(LG(E))) LC(TAB)  &none         &kp FSLH         &kp MINUS     &kp PLUS      &kp ASTERISK  &kp CARET   &kp EQUAL
                                        &none                          &trans                     &none         &mt LCTRL SPACE  &kp LEFT_ALT  &kp LEFT_GUI
            >;
        };

        BRACKET {
            bindings = <
                 &kp TILDE      &kp PIPE          &kp LEFT_BRACE        &kp RIGHT_BRACE        &none        &kp PRINTSCREEN  &none         &kp UP_ARROW  &none      &none
                 &kp LESS_THAN  &kp GREATER_THAN  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none        &kp PG_UP        &kp LEFT      &kp DOWN      &kp RIGHT  &kp LC(LA(LEFT_GUI))
&mt LCTRL GRAVE  &kp FSLH       &kp BSLH          &kp LBKT              &kp RBKT               &kp LCTRL    &kp PAGE_DOWN    &kp C_VOL_DN  &kp C_VOL_UP  &kp LSHFT  &none                 &kp DEL
                                                  &kp LGUI              &kp LALT               &kp LSHFT    &none            &none         &none
            >;
        };
    };
};
